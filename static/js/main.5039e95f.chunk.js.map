{"version":3,"sources":["images sync /^/.*/.png$","images/img1.png","images/img10.png","images/img11.png","images/img12.png","images/img2.png","images/img3.png","images/img4.png","images/img5.png","images/img6.png","images/img7.png","images/img8.png","images/img9.png","components/Images.js","App.js","serviceWorker.js","index.js"],"names":["map","./img1.png","./img10.png","./img11.png","./img12.png","./img2.png","./img3.png","./img4.png","./img5.png","./img6.png","./img7.png","./img8.png","./img9.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Item","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clicked","image","value","setNewNumber","bind","assertThisInitialized","setState","console","log","react_default","a","createElement","className","onClick","key","src","require","concat","alt","Images_Content","myNumber","React","Component","ImagesContainer","_this2","arrayOfImages","randomizeImages","array","imageArray","i","length","j","Math","floor","random","temp","item","Images_Item","Content","App","Images","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5039e95f.chunk.js","sourcesContent":["var map = {\n\t\"./img1.png\": 18,\n\t\"./img10.png\": 19,\n\t\"./img11.png\": 20,\n\t\"./img12.png\": 21,\n\t\"./img2.png\": 22,\n\t\"./img3.png\": 23,\n\t\"./img4.png\": 24,\n\t\"./img5.png\": 25,\n\t\"./img6.png\": 26,\n\t\"./img7.png\": 27,\n\t\"./img8.png\": 28,\n\t\"./img9.png\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/img1.a01ed5c0.png\";","module.exports = __webpack_public_path__ + \"static/media/img10.bd53bfa7.png\";","module.exports = __webpack_public_path__ + \"static/media/img11.71f8bb50.png\";","module.exports = __webpack_public_path__ + \"static/media/img12.a697dfc0.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.79b524ae.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.592597b2.png\";","module.exports = __webpack_public_path__ + \"static/media/img4.785b2ec8.png\";","module.exports = __webpack_public_path__ + \"static/media/img5.b9cc5006.png\";","module.exports = __webpack_public_path__ + \"static/media/img6.8274d5cf.png\";","module.exports = __webpack_public_path__ + \"static/media/img7.e0f11813.png\";","module.exports = __webpack_public_path__ + \"static/media/img8.97bebe39.png\";","module.exports = __webpack_public_path__ + \"static/media/img9.3ed3333a.png\";","import React from \"react\";\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicked: 0,\n      image: this.props.value\n    };\n    this.setNewNumber = this.setNewNumber.bind(this);\n  }\n  setNewNumber() {\n    if (this.state.clicked < 1) {\n      this.setState({ clicked: this.state.clicked + 1 });\n    } else {\n      console.log(\"You lose!\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-3 col-sm-4 col-xs-6\">\n        <img\n          className=\"images\"\n          onClick={this.setNewNumber}\n          key={this.image}\n          src={require(`../images/${this.state.image}.png`)}\n          alt=\"\"\n        />\n        <Content myNumber={this.state.clicked} />\n      </div>\n    );\n  }\n}\n\nclass ImagesContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = arrayOfImages;\n    this.randomizeImages = this.randomizeImages.bind(this);\n  }\n\n  randomizeImages() {\n    console.log(\"HERE!!!\");\n    console.log(arrayOfImages);\n    var array = arrayOfImages.imageArray;\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    arrayOfImages = { imageArray: array };\n    console.log(array);\n    this.setState({ arrayOfImages });\n  }\n\n  render() {\n    return (\n      <div onClick={this.randomizeImages} className=\"row\">\n        {this.state.imageArray.map(item => (\n          <Item key={item} value={item} />\n        ))}\n      </div>\n    );\n  }\n}\n\nclass Content extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3>{this.props.myNumber}</h3>\n      </div>\n    );\n  }\n}\n\nlet arrayOfImages = {\n  imageArray: [\n    \"img1\",\n    \"img2\",\n    \"img3\",\n    \"img4\",\n    \"img5\",\n    \"img6\",\n    \"img7\",\n    \"img8\",\n    \"img9\",\n    \"img10\",\n    \"img11\",\n    \"img12\"\n  ]\n};\n\n//randomizeImages();\n\nexport default ImagesContainer;\n","import React from \"react\";\nimport \"./App.css\";\nimport ImagesContainer from \"./components/Images\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <ImagesContainer />\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}